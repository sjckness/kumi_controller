<robot xmlns:xacro="http://www.ros.org/wiki/xacro"  name="robot">

    
    <!-- base_link is a large rectangular plate. Some things to note: -->
    <!-- - We set the visual origin Z to half the box height, so that the link origin sits at the bottom of the box -->
    <!-- - We set the collision to be identical to the visual -->
    <!-- - We specified the colour manually (but still need to enter a name) -->
    <!-- - We specified all the inertial parameters manually -->
    <link name="body">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${lenght} ${thikness} ${thikness}" />
            </geometry>
            <material name="green">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="2 ${thikness} ${thikness}" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="12" />
            <inertia ixx="2.26" ixy="0.0" ixz="0.0" iyy="6.26" iyz="0.0" izz="8.5" />
        </inertial>
    </link>

    <!-- slider_joint lets slider_link move back and forth along the top of the base in one dimension.  -->
    <!-- - Origin is set to one of the top edges of the base_link box, so that our link skims across the top  -->
    <!-- - It moves along the X axis -->
    <!-- - We need to specify limits for the motion -->
    
    <joint name="front_sh" type="revolute">
        <origin xyz="${lenght/2} 0 ${-thikness/2}" rpy="0 0 0"/>
        <parent link="body"/>
        <child link="front_leg"/>
        <axis xyz="0 -1 0"/>
        <limit lower="-${pi/4}" upper="${pi/2}" velocity="100" effort="100"/> 
    </joint>

    <transmission name="joint1_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_sh">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1.0</mechanicalReduction>
    </actuator>
  </transmission>

  <!-- ros2_control interface -->
  <ros2_control name="MyRobotHardware" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="front_sh">
      <command_interface name="position"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>

   <!-- Gazebo plugin to connect ROS 2 controllers -->
  <gazebo>
    <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so"/>
  </gazebo>

    <!-- base_link is a large rectangular plate. Some things to note: -->
    <!-- - We set the visual origin Z to half the box height, so that the link origin sits at the bottom of the box -->
    <!-- - We set the collision to be identical to the visual -->
    <!-- - We specified the colour manually (but still need to enter a name) -->
    <!-- - We specified all the inertial parameters manually -->
    <link name="front_leg">
        <visual>
            <origin xyz="${thikness/2} 0 ${-leg_len/4}" rpy="0 0 0"/>
            <geometry>
                <box size="${thikness} ${thikness} ${leg_len/2}" />
            </geometry>
            <material name="orange">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>
        <collision>
            <origin xyz="${thikness/2} 0 -${leg_len/4}" rpy="0 0 0"/>
            <geometry>
                <box size="${thikness} ${thikness} ${leg_len/2}" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="${thikness/2} 0 -${leg_len/4}" rpy="0 0 0"/>
            <mass value="12" />
            <inertia ixx="2.26" ixy="0.0" ixz="0.0" iyy="6.26" iyz="0.0" izz="8.5" />
        </inertial>
    </link>

</robot>