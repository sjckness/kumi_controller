<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro"  name="robot">

    <!-- This is an example of a URDF. -->
    <!-- As we move through the file, new things to note will be pointed out. -->
    <!-- It's not meant an example of GOOD design, but an example of some of the various features of URDF/xacro. -->



    <!-- This will include all the contents of example_include.xacro first. Go check it out! -->
    <xacro:include filename="basics.xacro" />


    <!-- base_link is a large rectangular plate. Some things to note: -->
    <!-- - We set the visual origin Z to half the box height, so that the link origin sits at the bottom of the box -->
    <!-- - We set the collision to be identical to the visual -->
    <!-- - We specified the colour manually (but still need to enter a name) -->
    <!-- - We specified all the inertial parameters manually -->
    <link name="back_foot">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="1 0.5 0.2" />
            </geometry>
            <material name="white">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="1 0.5 0.2" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="12" />
            <inertia ixx="2.26" ixy="0.0" ixz="0.0" iyy="6.26" iyz="0.0" izz="8.5" />
        </inertial>
    </link>



    <!-- slider_joint lets slider_link move back and forth along the top of the base in one dimension.  -->
    <!-- - Origin is set to one of the top edges of the base_link box, so that our link skims across the top  -->
    <!-- - It moves along the X axis -->
    <!-- - We need to specify limits for the motion -->
    
    <joint name="back_ankle" type="revolute">
        <origin xyz="0 0 0.1" rpy="0 0 0"/>
        <parent link="back_foot"/>
        <child link="back_leg"/>
        <axis xyz="0 -1 0"/>
        <limit lower="-${pi/4}" upper="${pi/4}" velocity="100" effort="100"/> 
    </joint>

    <!-- base_link is a large rectangular plate. Some things to note: -->
    <!-- - We set the visual origin Z to half the box height, so that the link origin sits at the bottom of the box -->
    <!-- - We set the collision to be identical to the visual -->
    <!-- - We specified the colour manually (but still need to enter a name) -->
    <!-- - We specified all the inertial parameters manually -->
    <link name="back_leg">
        <visual>
            <origin xyz="0 0 1" rpy="0 0 0"/>
            <geometry>
                <box size="0.3 0.3 2" />
            </geometry>
            <material name="orange">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 1" rpy="0 0 0"/>
            <geometry>
                <box size="0.3 0.3 2" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 1" rpy="0 0 0"/>
            <mass value="12" />
            <inertia ixx="2.26" ixy="0.0" ixz="0.0" iyy="6.26" iyz="0.0" izz="8.5" />
        </inertial>
    </link>

    <!-- slider_joint lets slider_link move back and forth along the top of the base in one dimension.  -->
    <!-- - Origin is set to one of the top edges of the base_link box, so that our link skims across the top  -->
    <!-- - It moves along the X axis -->
    <!-- - We need to specify limits for the motion -->
    
    <joint name="back_sh" type="revolute">
        <origin xyz="0.15 0 2" rpy="0 0 0"/>
        <parent link="back_leg"/>
        <child link="body"/>
        <axis xyz="0 -1 0"/>
        <limit lower="-${pi/4}" upper="${pi/2}" velocity="100" effort="100"/> 
    </joint>

    <!-- base_link is a large rectangular plate. Some things to note: -->
    <!-- - We set the visual origin Z to half the box height, so that the link origin sits at the bottom of the box -->
    <!-- - We set the collision to be identical to the visual -->
    <!-- - We specified the colour manually (but still need to enter a name) -->
    <!-- - We specified all the inertial parameters manually -->
    <link name="body">
        <visual>
            <origin xyz="1 0 0.15" rpy="0 0 0"/>
            <geometry>
                <box size="2 0.3 0.3" />
            </geometry>
            <material name="green">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>
        <collision>
            <origin xyz="1 0 0.15" rpy="0 0 0"/>
            <geometry>
                <box size="0.3 0.3 2" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="1 0 0.15" rpy="0 0 0"/>
            <mass value="12" />
            <inertia ixx="2.26" ixy="0.0" ixz="0.0" iyy="6.26" iyz="0.0" izz="8.5" />
        </inertial>
    </link>

        <!-- slider_joint lets slider_link move back and forth along the top of the base in one dimension.  -->
    <!-- - Origin is set to one of the top edges of the base_link box, so that our link skims across the top  -->
    <!-- - It moves along the X axis -->
    <!-- - We need to specify limits for the motion -->
    
    <joint name="front_sh" type="revolute">
        <origin xyz="2 0 0" rpy="0 0 0"/>
        <parent link="body"/>
        <child link="front_leg"/>
        <axis xyz="0 -1 0"/>
        <limit lower="-${pi/4}" upper="${pi/2}" velocity="100" effort="100"/> 
    </joint>

    <!-- base_link is a large rectangular plate. Some things to note: -->
    <!-- - We set the visual origin Z to half the box height, so that the link origin sits at the bottom of the box -->
    <!-- - We set the collision to be identical to the visual -->
    <!-- - We specified the colour manually (but still need to enter a name) -->
    <!-- - We specified all the inertial parameters manually -->
    <link name="front_leg">
        <visual>
            <origin xyz="0.15 0 -1" rpy="0 0 0"/>
            <geometry>
                <box size="0.3 0.3 2" />
            </geometry>
            <material name="orange">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0.15 0 -1" rpy="0 0 0"/>
            <geometry>
                <box size="0.3 0.3 2" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0.15 0 -1" rpy="0 0 0"/>
            <mass value="12" />
            <inertia ixx="2.26" ixy="0.0" ixz="0.0" iyy="6.26" iyz="0.0" izz="8.5" />
        </inertial>
    </link>

    <!-- slider_joint lets slider_link move back and forth along the top of the base in one dimension.  -->
    <!-- - Origin is set to one of the top edges of the base_link box, so that our link skims across the top  -->
    <!-- - It moves along the X axis -->
    <!-- - We need to specify limits for the motion -->
    
    <joint name="front_ankle" type="revolute">
        <origin xyz="0.15 0 -2" rpy="0 0 0"/>
        <parent link="front_leg"/>
        <child link="front_foot"/>
        <axis xyz="0 -1 0"/>
        <limit lower="-${pi/4}" upper="${pi/4}" velocity="100" effort="100"/> 
    </joint>

    <!-- base_link is a large rectangular plate. Some things to note: -->
    <!-- - We set the visual origin Z to half the box height, so that the link origin sits at the bottom of the box -->
    <!-- - We set the collision to be identical to the visual -->
    <!-- - We specified the colour manually (but still need to enter a name) -->
    <!-- - We specified all the inertial parameters manually -->
    <link name="front_foot">
        <visual>
            <origin xyz="0 0 -0.1" rpy="0 0 0"/>
            <geometry>
                <box size="1 0.5 0.2" />
            </geometry>
            <material name="white">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 -0.1" rpy="0 0 0"/>
            <geometry>
                <box size="1 0.5 0.2" />
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 -0.1" rpy="0 0 0"/>
            <mass value="12" />
            <inertia ixx="2.26" ixy="0.0" ixz="0.0" iyy="6.26" iyz="0.0" izz="8.5" />
        </inertial>
    </link>

</robot>